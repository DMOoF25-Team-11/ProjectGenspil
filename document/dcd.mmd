classDiagram

class UserList {
    -list<User> _users
    +GetUsers(): list<User>
    +AddUser(Username: string, Password: string): void
    +RemoveUser(Username: string): void
}
note for UserList "Indeholder en liste over brugere."

class User {
    -string -username
    -string -password
    Role Role // enum
    User(Username: string, Password: string, Role: Role): void
    +GetUsername(): string
    +GetPassword(): string
    +SetUsername(Username: string): void
    +SetPassword(Password: string): void
}
note for User "Bruges til at logge ind og administrere brugere.
Krav da vi har oplysinger på kunder (GPDR)."

class Role {
    <<enumeration>>
    Admin
    User
    Guest
}
note for Role "Brugerroller"

class Customer {
    -int CustomerID
    -string Name
    -string Address
    +Customer(CustomerID: int, Name: string, Address: string)
    +GetCustomerID(): int
    +GetName(): string
    +GetAddress(): string
    +SetName(Name: string): void
    +SetAddress(Address: string): void
    +ToString(): string
}
note for Customer "Administrerer personlige oplysninger og spilkøb/reservationer."

class CustomerList {
    -list<Customer> _customers
    +GetCustomers(): list<Customer>
    +AddCustomer(Customer: Customer): void
    +UpdateCustomer(Customer: Customer): void
    +RemoveCustomer(Customer: Customer): void
    +GetCustomerByID(CustomerID: int): Customer
    +GenerateID(): int
}
note for CustomerList "Indeholder en liste over kunder."

class BoardGameList {
    -list<BoardGame> _boardGames
    -Reserved? _reserved = null
    +BoardGames(): list<BoardGame>
    +GetBoardGames(): list<BoardGame>
    +Add(BoardGame: BoardGame): void
    +Update(BoardGame: BoardGame): void
    +GetBoardGamesByGenre(genre: Genre): list<BoardGame>
    +GetBoardGamesByTitle(title: string): list<BoardGame>
    +GenerateID(): int
    +Seek(title: string, condition: Condition, price: decimal, genre: Genre, numberPlayers: int): list<BoardGameVariant>
}
note for BoardGameList "Indeholder en liste
over brætspil."

class BoardGame {
    -int _boardGameID
    -string _title
    -list<BoardGameVariant> _variant
    -Genre _genre
    +Title(): string
    +Title(Title: string): void
    +Variants(): list<string>
    +Variants(Variants: list<string>): void
    +Genre(): Genre
    +Genre(Genre: Genre): void
    BoardGame(BoardGameID: int, Title: string, Variant: string, Genre: Genre, Condition: Condition)
    +ToString(): string
}
note for BoardGame "Repræsenterer et brugt brætspil
med tilstand og lager."

class BoardGameVariant {
    -list<Condition> _condition
    string Variant
    string numberOfPlayer // antal spillere
    +BoardGameVariant(BoardGame: BoardGame, Variant: string, Condition: Condition): void
    +Condition(): Condition
    +Condition(Condition: Condition): void
    +GetReserved(): Reserved
    +SetReserved(Reserved: Reserved): void
}
note for BoardGameVariant "Brætspil varianter"

class Reserved {
    -DateTime _reservedDate
    -int _quantity
    -int _customerID
    +Reserved(ReservedDate: DateTime, Quantity: int, CustomerID: int, BoardGameID: int): void
}
note for Reserved "Hvornår et brætspil er 
reserveret. Og til hvem"

class Condition {
    -ConditionEnum _condition
    -int _quantity
    -decimal _price
    +ConditionEnum(): ConditionEnum
    +ConditionEnum(Condition: ConditionEnum): void
    +Quantity(): int
    +Quantity(Quantity: int): void
    +GetPrice(): decimal
    +SetPrice(Price: decimal): void
    +Condition(Condition: ConditionEnum, Quantity: int, Price: decimal): void
}
note for Condition "Brætspil tilstand og antal vi har"

class ConditionEnum {
    <<enumeration>>
    Ny // helt ny
    God // god stand
    Brugt // lettere ridset
    Slidt // lidt skrammet
    Reparation // reparation
}
note for ConditionEnum "Brætspil tilstand"


class Genre {
    <<enumeration>>
    Quiz
    Strategi
    Familie
    Selskab
    Rollespil
    Børnespil
}
note for Genre "Brætspil genre"

CustomerList "1" *-- "*" Customer : Indeholder
Customer "*" -- "*" BoardGameList : Køber / reservere
BoardGameList "1" *-- "*" BoardGame : Indeholder
BoardGame "1" *-- "*" BoardGameVariant : Indeholder
BoardGameVariant "1" *-- "*" Reserved : Reserveres
Customer "1" o-- "*" Reserved : Reserverer
BoardGameVariant "*" *-- "1" Condition : Har
BoardGame "*" -- "*" Genre : Har
UserList "1" *-- "*" User : Indeholder
User "1" -- "1" Role : Har
ConditionEnum -- Condition : Har
